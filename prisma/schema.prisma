generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ClientBackupShare {
  backupMethod String       @default("UNKNOWN")
  createdAt    DateTime     @default(now())
  id           String       @id @default(cuid())
  cipherText   String
  userId       Int

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, backupMethod])
}

model CustodianBackupShare {
  backupMethod String       @default("UNKNOWN")
  createdAt    DateTime     @default(now())
  id           String       @id @default(cuid())
  share        String
  userId       Int

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, backupMethod])
}

model ExchangeBalance {
  cachedBalance Decimal @default(0)
  chainId       Int     @default(4)
  id            Int     @id @default(autoincrement())

  @@map("exchange_balance")
}

model MagicCode {
  code      String
  createdAt DateTime @default(now())
  email     String
  id        Int      @id @default(autoincrement())
}

model User {
  address        String?
  apiKey         String?
  apiSecret      String?
  clientApiKey   String  @unique
  clientId       String  @unique
  exchangeUserId Int     @unique
  id             Int     @id @default(autoincrement())
  pushToken      String?
  username       String  @unique
  walletId       String?

  clientBackupShares    ClientBackupShare[]
  custodianBackupShares CustodianBackupShare[]
  wallet                Wallet?
}

model Wallet {
  id         String @id @default(cuid())
  privateKey String
  publicKey  String
  userId     Int?   @unique

  user User? @relation(fields: [userId], references: [id])

  @@map("wallets")
}
